wait(3)
print("Executed!")
prefix = "="
loadstring(game:HttpGet('https://raw.githubusercontent.com/yeyecowboy/nicksadmin/main/notification'))()

function predictname(NameVariable)
    local Table = game.Players:GetChildren()
    for i, v in pairs(Table) do
        if v.DisplayName ~= "" .. game.Players.LocalPlayer.Name then
            if string.find(string.lower(v.Name), string.lower(NameVariable)) then
                return v.Name
            elseif string.find(string.lower(v.DisplayName), string.lower(NameVariable)) then
                return v.Name
            end
        end
    end
end

function isNumber(str)
    if tonumber(str) ~= nil or str == 'inf' then
        return true
    end
end

local players = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = players.LocalPlayer
local humanoid = localPlayer.Character.Humanoid
local HRP = localPlayer.Character.HumanoidRootPart
local TW = task.wait
local Mouse = localPlayer:GetMouse()

Mouse.KeyDown:Connect(function(Key)
    if infJump == true and Key == " " then
        localPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState(3)
    end
end)

local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")

game:GetService("TextChatService").OnIncomingMessage = function(message)
    local speakerUserId = message.TextSource.UserId
    local speaker = players:GetPlayerByUserId(speakerUserId)
    local msgText = message.Text

    function AddCmd(commandV)
        return string.match(msgText, "^" .. prefix .. tostring(commandV))
    end

    if speaker and (speaker.Name == "" .. localPlayer.Name or speaker.Name == "kvoyr") then
        if AddCmd("cmds") then
            print("Available commands: \n==say,\n==goto,\n==ws or ==walkspeed,\n==jp or ==jumppower,\n==hh or ==hipheight,\n==sit (to get up press space),\n==iac or ==instantacceleration,\n==uniac or uninstantacceleration,\n==rj or ==rejoin,\n==re or ==reset,\n==walkto,\n==fwalkto")
        end

        if AddCmd("say") then
            local Args = string.match(msgText, "%" .. prefix .. "say%s?(.+)")
            game:GetService("TextChatService"):SendChat(Args, "All")
        end

        if AddCmd("goto") then
            local Args = predictname(tostring(string.split(msgText, " ")[2]))
            HRP.CFrame = players[Args].Character.HumanoidRootPart.CFrame
        end

        if AddCmd("ws") or AddCmd("walkspeed") then
            local Args = tostring(string.split(msgText, " ")[2])
            localPlayer.Character.Humanoid.WalkSpeed = Args
        end

        if AddCmd("jp") or AddCmd("jumppower") then
            local Args = tostring(string.split(msgText, " ")[2])
            localPlayer.Character.Humanoid.JumpPower = Args
        end

        if AddCmd("hh") or AddCmd("hipheight") then
            local Args = tostring(string.split(msgText, " ")[2])
            localPlayer.Character.Humanoid.HipHeight = Args
        end

        if AddCmd("sit") then
            localPlayer.Character.Humanoid.Sit = true
            print("Jump to get up from sitting")
        end

        if AddCmd("iac") or AddCmd("instantaccelerate") then
            localPlayer.Character:GetChildren().CustomPhysicalProperties = nil
        end

        if AddCmd("uniac") or AddCmd("uninstantaccelerate") then
            localPlayer.Character.Humanoid.Health = 0
        end

        if AddCmd("rj") or AddCmd("rejoin") then
            TeleportService:Teleport(game.PlaceId, localPlayer)
        end

        if AddCmd("reset") then
            localPlayer.Character.Humanoid.Health = 0
        end

        if AddCmd("walkto") then
            local Args = predictname(tostring(string.split(msgText, " ")[2]))
            humanoid.WalkToPoint = players[Args].Character.HumanoidRootPart.Position
        end

        if AddCmd("fwalkto") then
            local Args = predictname(tostring(string.split(msgText, " ")[2]))
            local Args1 = tostring(string.split(msgText, " ")[3])
            humanoid.WalkToPoint = players[Args].Character.HumanoidRootPart.Position
            localPlayer.Character.Humanoid.WalkSpeed = Args1
        end

        if AddCmd("upd") then
            game:GetService("TextChatService"):SendChat("Updating...", "All")
            local script = [[
                loadstring(game:HttpGet("https://raw.githubusercontent.com/yeyecowboy/nicksadmin/main/nicksadmin", true))()
            ]]
            local queue_on_teleport = (type(syn) == "table" and syn.queue_on_teleport) or queue_on_teleport
            queue_on_teleport(script)
            TeleportService:Teleport(game.PlaceId, localPlayer)
        end

        if AddCmd("wock") then
            game:GetService("TextChatService"):SendChat("I took the wOOoOoCk to Poland", "All")
        end

        if AddCmd("nolimbs") then
            localPlayer.Character["Left Arm"]:Destroy()
            localPlayer.Character["Right Arm"]:Destroy()
            localPlayer.Character["Left Leg"]:Destroy()
            localPlayer.Character["Right Leg"]:Destroy()
        elseif AddCmd("noarms") then
            localPlayer.Character["Left Arm"]:Destroy()
            localPlayer.Character["Right Arm"]:Destroy()
        elseif AddCmd("nolegs") then
            localPlayer.Character["Left Leg"]:Destroy()
            localPlayer.Character["Right Leg"]:Destroy()
        end

        if AddCmd("baller") then
            wait(1)
            game:GetService("TextChatService"):SendChat("STOP POSTING ABOUT BALLER", "All")
            wait(1)
            game:GetService("TextChatService"):SendChat("IM TIRED OF SEEING IT", "All")
            wait(1)
            game:GetService("TextChatService"):SendChat("MY FRIENDS ON TACKTOCK SEND ME BALLER", "All")
            wait(1)
            game:GetService("TextChatService"):SendChat("ON DKRD ITS BALLER", "All")
            wait(1)
            game:GetService("TextChatService"):SendChat("I WAS IN STUDIO ORIGAMI RIGHT", "All")
            wait(1)
            game:GetService("TextChatService"):SendChat("AND ALL THE CHANNELS WERE JUST BALLER", "All")
        end

        if AddCmd("lay") then
            local Human = localPlayer.Character and localPlayer.Character:FindFirstChildOfClass('Humanoid')
            if not Human then
                return
            end
            Human.Sit = true
            task.wait(.1)
            HRP.CFrame = HRP.CFrame * CFrame.Angles(math.pi * .5, 0, 0)
            for _, v in ipairs(Human:GetPlayingAnimationTracks()) do
                v:Stop()
            end
        end

        if AddCmd("infjump") then
            infJump = true
        end

        if AddCmd("uninfjump") then
            infJump = false
        end

        if AddCmd("grav") then
            local Args = tostring(string.split(msgText, " ")[2])
            local grav = Args or 196.2
            if isNumber(grav) then
                workspace.Gravity = grav
            end
        end

        if AddCmd("touchinterests") then
            for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
                if v.Name == "TouchInterest" and v.Parent then
                    firetouchinterest(HRP, v.Parent, 0)
                    task.wait(0.1)
                    firetouchinterest(HRP, v.Parent, 1)
                end
            end
        end

        if AddCmd('refresh', 're') then
            local oldCFrame = HRP.CFrame
            localPlayer.Character.Humanoid.Health = 0
            if localPlayer.Character.Humanoid.Health >= 0.1 then
                HRP.CFrame = CFrame.new(oldCFrame)
            end
        end

        local Noclipping = false
        if AddCmd('noclip') then
            Clip = false
            wait(0.1)
            local function NoclipLoop()
                if Clip == false and speaker.Character ~= nil then
                    for _, child in pairs(speaker.Character:GetDescendants()) do
                        if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
                            child.CanCollide = false
                        end
                    end
                end
            end

            RunService.Stepped:Connect(NoclipLoop)
        end

        if AddCmd('clip') then
            Clip = true
            if Noclipping then
                Noclipping:Disconnect()
            end
        end
    end
end
